{"version":3,"sources":["components/Buttons.tsx","config/getConfig.ts","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","ethrpc.ts","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/tokens.ts","storage/localStorage.ts","app/state/operations/tokens.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","app/Authenticated/components/Navigation.tsx","app/Authenticated/components/HeaderComponent.tsx","components/Panel/Panel.tsx","providerContext.tsx","components/Modal/Modal.tsx","components/EthrDid/DelegateComponent.tsx","components/EthrDid/OwnerComponent.tsx","app/Dashboard/panels/IdentityInformation.tsx","app/Dashboard/panels/Balance.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","assets/images/icons/trash.svg","assets/images/icons/pencil.svg","components/Modal/BinaryModal.tsx","components/Modal/EditValueModal.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","components/Loading/LoadingComponent.tsx","app/DataVault/panels/AddDeclarativeDetails.tsx","app/DataVault/DataVaultComponent.tsx","app/DataVault/DataVaultContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["SETTINGS","BaseButton","styled","button","LoginScreenComponent","handleLogin","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","getSetting","setting","Ethereum","Mainnet","Testnet","Local","Error","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","5777","supportedChains","identitySlice","createSlice","name","initialState","address","reducers","changeAccount","state","payload","changeChainId","actions","ethrDidSlice","didDocument","id","publicKey","authentication","resolveDid","data","displayIdentity","addr","slice","length","createDidFormat","includeEthr","truncateAddressDid","value","lastIndexOf","lastIndex","resolverProviderConfig","networks","registry","rpcUrl","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","tokensSlice","tokens","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","localStorage","getItem","JSON","parse","getTokenList","userAddress","TOKENS","getTokens","localTokens","concat","Array","isArray","getToken","onComplete","eth","token","EthContract","ethContract","erc20abi","at","getCode","result","catch","err","console","log","message","decimals","balanceOf","div","BN","pow","toNumber","addCustomToken","reject","response","json","setItem","stringify","saveToLocalStorage","toString","storage","undefined","dataVaultSlice","receiveKeyData","content","addContentToKey","removeContentfromKey","swapContentById","receiveStorageInformation","createClient","dataVaultConfig","DATAVAULT","getDataVault","DataVaultWebClient","serviceUrl","serviceDid","rpcPersonalSign","request","method","params","login","context","connect","setProvider","client","dataVaultClient","setDvClient","getKeys","keys","forEach","get","used","available","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","screens","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","Header","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","title","headerRight","Web3ProviderContext","React","createContext","dvClient","Web3ProviderElement","useState","initialContext","Provider","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","onClose","DelegateComponent","delegates","addDelegate","isOwner","add","setAdd","isLoading","setIsLoading","newDelegate","setNewDelegate","isError","setIsError","useContext","resetState","delegate","indexOf","type","onChange","evt","placeholder","disabled","isValidAddress","isValidChecksumAddress","OwnerComponent","owner","changeOwner","edit","setEdit","newOwner","setNewOwner","IdentityInformationPanel","isAdvanced","setIsAdvanced","advancedToggle","needHover","original","rounded","parseFloat","toFixed","SingleToken","Balance","isAdding","setIsAdding","newAddress","setNewAddress","togglePopup","BarWrapper","BarProgress","ProgressBar","total","width","Math","round","style","DataVaultSummary","handleButton","datavaultIcon","DashboardScreen","changeScreen","IdentityInformation","getOwnerFromDidDoc","controller","pk","endsWith","ethereumAddress","identity","ethrdid","datavault","EthrDID","setDidOwner","delegateType","userAddr","tokenAddr","DasboardScreen","BinaryModal","onConfirm","onDeny","strings","text","deny","confirm","EditValueModal","error","initValue","inputType","editable","setEditable","sharedProps","useEffect","intro","label","submit","DeclarativeDetailsDisplay","details","deleteValue","swapValue","isDeleting","setIsDeleting","isEditing","setIsEditing","declarativeIcon","Object","pencilIcon","trashIcon","newValue","existingItem","finally","handleEditItem","LoadingComponent","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","DataVaultComponent","declarativeDetails","create","createDataVaultContent","delete","deleteDataVaultContent","swap","swapDataVaultContent","AuthenticatedComponent","screen","setScreen","HeaderComponent","DashboardContainer","DataVaultContainer","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","createLogger","rootReducer","combineReducers","identityReducer","ethrdidReducer","tokenReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c6d7968f.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","/* eslint-disable no-unused-vars */\nimport Ethereum from './config.ethereum.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  TOKENS = 'tokens',\n  DATAVAULT = 'dataVault'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 5777: return Local[setting]\n    default: throw new Error(`No setting for chainId ${chainId}`)\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getTokens = (chainId: number) => getSetting(chainId, SETTINGS.TOKENS)\nexport const getDataVault = (chainId: number) => getSetting(chainId, SETTINGS.DATAVAULT)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","import Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 30, 31, 5777]\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    }\n  }\n})\n\nexport const { changeAccount, changeChainId } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    }\n  }\n})\n\nexport const { resolveDid } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Creates address and truncates it\n * @param address address for the did\n * @param chainId chainId\n */\nexport const displayIdentity = (address: string, chainId?: number) => {\n  const addr = `${address.slice(0, 6)}...${address.slice(address.length - 4)}`\n  switch (chainId) {\n    case 1: return `did:eth:${addr}`\n    case 30: return `did:rsk:${addr}`\n    case 31: return `did:rsk:testnet:${addr}`\n    default: return addr\n  }\n}\n\n/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n * @param includeEthr include eth:, required for some did tools\n */\nexport const createDidFormat = (address: string, chainId: number, includeEthr?: boolean) => {\n  switch (chainId) {\n    case 1: return `did:${includeEthr ? 'ethr:' : ''}mainnet:${address}`\n    case 30: return `did:${includeEthr ? 'ethr:' : ''}rsk:${address}`\n    case 31: return `did:${includeEthr ? 'ethr:' : ''}rsk:testnet:${address}`\n    case 5777: return `did:${includeEthr ? 'ethr:' : ''}development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nexport const resolverProviderConfig = {\n  networks: [\n    { name: 'mainnet', registry: getDIDRegistryAddress(1), rpcUrl: getRPCUrl(1) },\n    { name: 'rsk', registry: getDIDRegistryAddress(30), rpcUrl: getRPCUrl(30) },\n    { name: 'rsk:testnet', registry: getDIDRegistryAddress(31), rpcUrl: getRPCUrl(31) },\n    { name: 'development', registry: getDIDRegistryAddress(5777), rpcUrl: getRPCUrl(5777) }\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then(() => resolve(dispatch(resolveDidDocument(provider))))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId, true)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((response: any) => {\n          dispatch(resolveDidDocument(provider))\n          resolve(response)\n        })\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0\n}\n\nexport interface TokenState {\n  tokens: Token[]\n}\n\nexport const initialState = {\n  tokens: []\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst tokensSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: TokenState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    }\n  }\n})\n\nexport const { addTokenData } = tokensSlice.actions\n\nexport default tokensSlice.reducer\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData } from '../reducers/tokens'\nimport { getTokens } from '../../../config/getConfig'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\n\nexport const getTokenList = (provider: any, chainId: string, userAddress: string) => (dispatch: Dispatch<any>) => {\n  const tokens = <string[]> getTokens(parseInt(chainId))\n  const localTokens = getValueFromLocalStorage(chainId, 'TOKEN') ? getValueFromLocalStorage(chainId, 'TOKEN') : []\n\n  const all = tokens?.concat(localTokens)\n  Array.isArray(all) && all.map((address: string) => {\n    dispatch(getToken(provider, address, userAddress))\n  })\n}\n\nexport const getToken = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getToken(provider, address, userAddress, onComplete))\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  data: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  data: {},\n  storage: undefined\n}\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      state.data[key] = content\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.data[key] ? state.data[key].push(content) : state.data[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      state.data[key] = state.data[key].filter((item: DataVaultContent) => item.id !== id)\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.data[key] = state.data[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    }\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const dataVaultConfig = <{serviceUrl: string, serviceDid: string} | null> getDataVault(chainId)\n\n  return dataVaultConfig\n    ? new DataVaultWebClient({\n      serviceUrl: dataVaultConfig.serviceUrl,\n      serviceDid: dataVaultConfig.serviceDid,\n      did: createDidFormat(address, chainId, true),\n      rpcPersonalSign: (data: string) => provider.request({ method: 'personal_sign', params: [address, data] })\n    })\n    : null\n}\n\n/**\n * Get all keys and data from the datavault\n * @param client DataVault client\n * @param did DID of the user, required for getting individual key content\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, did: string) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) =>\n      keys.forEach((key: string) =>\n        client.get({ did, key })\n          .then((content: any) => content as DataVaultContent[])\n          .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n      )\n    )\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Returns storage information from DataVault\n * @TODO - NOT IMPLEMENTED IN CLIENT YET\n * @param client DataVault client\n */\nexport const getStorageInformation = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  dispatch((receiveStorageInformation({ storage: { used: 10, available: 150 } })))\n//   client.getStorageInformation()\n//    .then((storage: DataVaultStorageState) => dispatch(receiveStorageInformation({ storage })))\n","import { Dispatch } from 'react'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getTokenList } from './tokens'\nimport { createClient, getDataVaultContent, getStorageInformation } from './datavault'\nimport { createDidFormat } from '../../../formatters'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, chainId, address))\n\n      const dataVaultClient = createClient(provider, address, chainId)\n      context.setDvClient(dataVaultClient)\n\n      dataVaultClient && dispatch(getDataVaultContent(dataVaultClient, createDidFormat(address, chainId, true)))\n      dataVaultClient && dispatch(getStorageInformation(dataVaultClient))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  visibility: hidden;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity .6s;\n  max-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover + ${HoverSpan} {\n    visibility: visible;\n    opacity: 1;\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <>\n    <HoverTrigger className={className}>{children}</HoverTrigger>\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </>\n)\n\nexport default ToolTip\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'active' : ''}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface HeaderComponentInterface {\n  did: string | null\n  chainId?: number | null\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId }) => (\n  <header className=\"container\">\n    <div className=\"column branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      {did && (\n        <h1 className=\"persona\">\n          <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n        </h1>\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient) => setDvClient(client)\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","import React, { useContext, useState } from 'react'\nimport { Authentication } from 'did-resolver'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { BaseButton } from '../Buttons'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport Modal from '../Modal/Modal'\nimport { truncateAddressDid } from '../../formatters'\nimport ToolTip from '../Tooltip/Tooltip'\n\ninterface DelegateComponentInterface {\n  delegates?: Authentication[] | null\n  chainId?: number | null\n  addDelegate: (provider: any, delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [add, setAdd] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [newDelegate, setNewDelegate] = useState<string>('')\n  const [isError, setIsError] = useState<null | string>(null)\n  const context = useContext(Web3ProviderContext)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = () => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.publicKey.indexOf(newDelegate) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(context?.provider, newDelegate)\n      .then(() => {\n        setAdd(false)\n        setNewDelegate('')\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setAdd(false)\n      resetState()\n    }\n  }\n\n  return (\n    <div className=\"column\">\n      <h2>Controllers</h2>\n      <ul className=\"value\">\n        {delegates?.map((delegate: Authentication) =>\n          <li key={delegate.publicKey}>\n            <ToolTip hoverContent={delegate.publicKey}>\n              {truncateAddressDid(delegate.publicKey.slice(delegate.publicKey.lastIndexOf(':') + 1, delegate.publicKey.indexOf('#')))}\n            </ToolTip>\n          </li>)\n        }\n      </ul>\n\n      {isOwner && <BaseButton onClick={() => setAdd(true)}>Add Delegate</BaseButton>}\n      <Modal show={add} title=\"Delegate Identity\" onClose={handleClose}>\n        <div className=\"delegate-identity\">\n          <p>Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.</p>\n          <p>\n            <strong>Delegate to: </strong>\n            <input\n              type=\"text\"\n              value={newDelegate}\n              onChange={evt => setNewDelegate(evt.target.value)}\n              placeholder=\"address\"\n              className=\"line\"\n              disabled={isLoading}\n            />\n          </p>\n          <BaseButton className=\"blue\" disabled={isLoading} onClick={handleAddDelegate}>Add controller</BaseButton>\n          {isError && <p>{isError}</p>}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useContext, useState } from 'react'\nimport { truncateAddressDid } from '../../formatters'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { BaseButton } from '../Buttons'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport Modal from '../Modal/Modal'\nimport ToolTip from '../Tooltip/Tooltip'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (provider: any, newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [edit, setEdit] = useState<boolean>(false)\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const context = useContext(Web3ProviderContext)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = () => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(context?.provider, newOwner)\n      .then(() => {\n        setEdit(false)\n        setNewOwner('')\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setEdit(false)\n      resetState()\n    }\n  }\n\n  return (\n    <div className=\"column\">\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {owner && <ToolTip hoverContent={owner}>{truncateAddressDid(owner)}</ToolTip>}\n      </p>\n\n      {isOwner && <BaseButton onClick={() => setEdit(!edit)}>Change Owner</BaseButton>}\n\n      <Modal show={edit} title=\"Transfer Identity\" onClose={handleClose}>\n        <div className=\"change-owner\">\n          <p>Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.</p>\n          <p>\n            <strong>Transfer to: </strong>\n            <input\n              type=\"text\"\n              value={newOwner}\n              onChange={evt => setNewOwner(evt.target.value)}\n              placeholder=\"address\"\n              className=\"line\"\n              disabled={isLoading}\n            />\n          </p>\n          <BaseButton className=\"blue\" disabled={isLoading} onClick={handleSetOwner}>Transfer</BaseButton>\n          {isError && <p>{isError}</p>}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default OwnerComponent\n","import { Authentication } from 'did-resolver'\nimport React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { displayIdentity } from '../../../formatters'\nimport DelegateComponent from '../../../components/EthrDid/DelegateComponent'\nimport OwnerComponent from '../../../components/EthrDid/OwnerComponent'\n\ninterface IdentityInformationPanelI {\n  address?: string | null\n  chainId?: number | null\n  owner?: string | null\n  delegates?: Authentication[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId, owner, delegates, changeOwner, addDelegate }) => {\n  const [isAdvanced, setIsAdvanced] = useState<boolean>(false)\n  const advancedToggle = <button className=\"advancedToggle\" onClick={() => setIsAdvanced(!isAdvanced)}>{isAdvanced ? 'Basic' : 'Advanced'}</button>\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  if (!address || !chainId) return <></>\n\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Identity information\"\n          className=\"identity-information\"\n          headerRight={advancedToggle}\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Identity Address</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={address}>{displayIdentity(address, chainId)}</ToolTip>\n              </p>\n            </div>\n            {isAdvanced && (\n              <>\n                {owner && <OwnerComponent isOwner={isOwner} owner={owner} changeOwner={changeOwner} />}\n                {delegates && <DelegateComponent isOwner={isOwner} delegates={delegates} addDelegate={addDelegate} />}\n              </>\n            )}\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","import React, { useContext, useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Modal from '../../../components/Modal/Modal'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/tokens'\nimport { isValidAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst needHover = (original: number | null | undefined) => {\n  if (!original) { return original }\n  const rounded = parseFloat(original.toFixed(8))\n  return rounded === original ? original : <ToolTip hoverContent={original}>{rounded}</ToolTip>\n}\n\nconst SingleToken: React.FC<{ token: Token, key: any }> = ({ token }) => (\n  <div className=\"token\">\n    <div className=\"heading-symbol\">\n      {token.name || `Custom token: ${truncateAddressDid(token.address)}`}</div>\n    <div>\n      <span className=\"balance\">{needHover(token.balance)}</span>\n      <span className=\"symbol\">{token.symbol}</span>\n    </div>\n  </div>\n)\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Identity Balance\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup} className=\"circle-plus\">+</button>}\n    >\n      {tokens?.map((token: Token) => <SingleToken key={token.address} token={token} />)}\n\n      <Modal show={isAdding} title=\"Add token\" onClose={togglePopup}>\n        <p>Add an ERC20 or ERC721 token to the dashboard.</p>\n        <p>\n          <strong>Token to Add:</strong>\n          <input\n            type=\"text\"\n            value={newAddress}\n            onChange={evt => setNewAddress(evt.target.value)}\n            placeholder=\"contract address\"\n            className=\"line\"\n            disabled={isLoading}\n          />\n        </p>\n        <BaseButton\n          onClick={addToken}\n          className=\"blue\"\n          disabled={isLoading}\n        >Add Token</BaseButton>\n        {isError && <p>{isError}</p>}\n      </Modal>\n    </Panel>\n  )\n}\n\nexport default Balance\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.round((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {storage.available}</p>}>\n            <ProgressBar total={storage.available} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={handleButton} className=\"turquoise panel-button\">DataVault</BaseButton>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\nimport IdentityInformationComponent from './panels/IdentityInformation'\nimport { Authentication } from 'did-resolver'\nimport Balance from './panels/Balance'\nimport { Token } from '../state/reducers/tokens'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  owner?: string | null\n  delegates?: Authentication[]\n  tokens?: Token[]\n  storage?: DataVaultStorageState\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addCustomToken: (provider: any, tokenAddr: string) => any\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, owner, delegates, tokens, changeOwner, addDelegate, addCustomToken, changeScreen, storage\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      <IdentityInformationComponent\n        address={address}\n        chainId={chainId}\n        owner={owner}\n        delegates={delegates}\n        changeOwner={changeOwner}\n        addDelegate={addDelegate}\n      />\n      <div className=\"container\">\n        <div className=\"column\">\n          <Balance tokens={tokens} addCustomToken={addCustomToken} />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { Authentication, DIDDocument, PublicKey } from 'did-resolver'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { setDidOwner, addDelegate } from '../state/operations/ethrdid'\nimport { addCustomToken } from '../state/operations/tokens'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.tokens.tokens,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.authentication?.filter((pk: Authentication) => !pk.publicKey.endsWith('controller')),\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue }) => {\n  interface DeleteItemI { key: string; id: string }\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<null | DeleteItemI>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n\n  const handleDeleteItem = (item: DeleteItemI) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(item.key, item.id)\n      .then(() => setIsDeleting(null))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            if (details[key].length !== 0) {\n              return (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>\n                    {details[key].map((item: DataVaultContent) => (\n                      <div className=\"content-row\" key={item.id}>\n                        <div className=\"content\">\n                          <p>{item.content}</p>\n                        </div>\n                        <div className=\"options\">\n                          <button\n                            disabled={isLoading}\n                            className=\"icon edit\"\n                            onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                          >\n                            <img src={pencilIcon} alt=\"Edit item\" />\n                          </button>\n                          <button\n                            disabled={isLoading}\n                            className=\"icon delete\"\n                            onClick={() => setIsDeleting({ key, id: item.id })}>\n                            <img src={trashIcon} alt=\"Delete Item\" />\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </td>\n                </tr>\n              )\n            }\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n\n      <BinaryModal\n        show={isDeleting !== null}\n        onClose={() => setIsDeleting(null)}\n        onConfirm={() => isDeleting && handleDeleteItem(isDeleting)}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(type, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{isError}</div>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, deleteValue, swapValue\n}) => {\n  const context = useContext(Web3ProviderContext)\n\n  const handleAdd = (key: string, content: string) =>\n    context.dvClient && addDeclarativeDetail(context.dvClient, key, content)\n  const handleDelete = (key: string, id: string) =>\n    context.dvClient && deleteValue(context.dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) =>\n    context.dvClient && swapValue(context.dvClient, key, content, id)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails addDeclarativeDetail={handleAdd} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.data\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","import React, { useContext, useState } from 'react'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n\n  return (\n    <>\n      <HeaderComponent chainId={chainId} did={address} />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId\n})\n\nexport default connect(mapStateToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport tokenReducer, { TokenState } from './reducers/tokens'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware = [thunk, createLogger()]\n\nexport interface stateInterface {\n  identity: IdentityState,\n  ethrdid: EtherdidState,\n  tokens: TokenState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  tokens: tokenReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}